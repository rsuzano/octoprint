V// source: plugin/printer_safety_check/js/printer_safety_check.js\u000a$(function() {\u000a    function PrinterSafetyCheckViewModel(parameters) {\u000a        var self = this;\u000a\u000a        self.loginState = parameters[0];\u000a        self.printerState = parameters[1];\u000a\u000a        self.warnings = ko.observableArray([]);\u000a\u000a        self.requestData = function() {\u000a            if (!self.loginState.isUser()) {\u000a                self.warnings([]);\u000a                return;\u000a            }\u000a\u000a            OctoPrint.plugins.printer_safety_check.get()\u000a                .done(self.fromResponse)\u000a                .fail(function() {\u000a                    self.warnings([]);\u000a                });\u000a        };\u000a\u000a        self.fromResponse = function(data) {\u000a            var warnings = [];\u000a            _.each(data, function(message, warning_type) {\u000a                warnings.push({type: warning_type, message: gettext(message)});\u000a            });\u000a            self.warnings(warnings);\u000a        };\u000a\u000a        self.onStartup = function() {\u000a            self.requestData();\u000a        };\u000a\u000a        self.onUserLoggedIn = function() {\u000a            self.requestData();\u000a        };\u000a\u000a        self.onUserLoggedOut = function() {\u000a            self.requestData();\u000a        };\u000a\u000a        self.onDataUpdaterPluginMessage = function(plugin, data) {\u000a            if (plugin !== "printer_safety_check") return;\u000a            if (!data.hasOwnProperty("type")) return;\u000a\u000a            if (data.type === "update") {\u000a                self.requestData();\u000a            }\u000a        }\u000a    }\u000a\u000a    OCTOPRINT_VIEWMODELS.push({\u000a        construct: PrinterSafetyCheckViewModel,\u000a        dependencies: ["loginStateViewModel", "printerStateViewModel"],\u000a        elements: ["#sidebar_plugin_printer_safety_check_wrapper"]\u000a    });\u000a});\u000a\u000a\u000a;\u000a
p0
.