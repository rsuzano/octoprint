V// source: js/app/client/users.js\u000a(function (global, factory) {\u000a    if (typeof define === "function" && define.amd) {\u000a        define(["OctoPrintClient"], factory);\u000a    } else {\u000a        factory(global.OctoPrintClient);\u000a    }\u000a})(this, function(OctoPrintClient) {\u000a    var baseUrl = "api/users";\u000a\u000a    var url = function() {\u000a        if (arguments.length) {\u000a            return baseUrl + "/" + Array.prototype.join.call(arguments, "/");\u000a        } else {\u000a            return baseUrl;\u000a        }\u000a    };\u000a\u000a    var OctoPrintUserClient = function(base) {\u000a        this.base = base;\u000a    };\u000a\u000a    OctoPrintUserClient.prototype.list = function (opts) {\u000a        return this.base.get(url(), opts);\u000a    };\u000a\u000a    OctoPrintUserClient.prototype.add = function (user, opts) {\u000a        if (!user.name || !user.password) {\u000a            throw new OctoPrintClient.InvalidArgumentError("Both user's name and password need to be set");\u000a        }\u000a\u000a        var data = {\u000a            name: user.name,\u000a            password: user.password,\u000a            active: user.hasOwnProperty("active") ? !!user.active : true,\u000a            admin: user.hasOwnProperty("admin") ? !!user.admin : false\u000a        };\u000a\u000a        return this.base.postJson(url(), data, opts);\u000a    };\u000a\u000a    OctoPrintUserClient.prototype.get = function (name, opts) {\u000a        if (!name) {\u000a            throw new OctoPrintClient.InvalidArgumentError("user name must be set");\u000a        }\u000a\u000a        return this.base.get(url(name), opts);\u000a    };\u000a\u000a    OctoPrintUserClient.prototype.update = function (name, active, admin, opts) {\u000a        if (!name) {\u000a            throw new OctoPrintClient.InvalidArgumentError("user name must be set");\u000a        }\u000a\u000a        var data = {\u000a            active: !!active,\u000a            admin: !!admin\u000a        };\u000a        return this.base.putJson(url(name), data, opts);\u000a    };\u000a\u000a    OctoPrintUserClient.prototype.delete = function (name, opts) {\u000a        if (!name) {\u000a            throw new OctoPrintClient.InvalidArgumentError("user name must be set");\u000a        }\u000a\u000a        return this.base.delete(url(name), opts);\u000a    };\u000a\u000a    OctoPrintUserClient.prototype.changePassword = function (name, password, opts) {\u000a        if (!name || !password) {\u000a            throw new OctoPrintClient.InvalidArgumentError("user name and password must be set");\u000a        }\u000a\u000a        var data = {\u000a            password: password\u000a        };\u000a        return this.base.putJson(url(name, "password"), data, opts);\u000a    };\u000a\u000a    OctoPrintUserClient.prototype.generateApiKey = function (name, opts) {\u000a        if (!name) {\u000a            throw new OctoPrintClient.InvalidArgumentError("user name must be set");\u000a        }\u000a\u000a        return this.base.postJson(url(name, "apikey"), opts);\u000a    };\u000a\u000a    OctoPrintUserClient.prototype.resetApiKey = function (name, opts) {\u000a        if (!name) {\u000a            throw new OctoPrintClient.InvalidArgumentError("user name must be set");\u000a        }\u000a\u000a        return this.base.delete(url(name, "apikey"), opts);\u000a    };\u000a\u000a    OctoPrintUserClient.prototype.getSettings = function (name, opts) {\u000a        if (!name) {\u000a            throw new OctoPrintClient.InvalidArgumentError("user name must be set");\u000a        }\u000a\u000a        return this.base.get(url(name, "settings"), opts);\u000a    };\u000a\u000a    OctoPrintUserClient.prototype.saveSettings = function (name, settings, opts) {\u000a        if (!name) {\u000a            throw new OctoPrintClient.InvalidArgumentError("user name must be set");\u000a        }\u000a\u000a        settings = settings || {};\u000a        return this.base.patchJson(url(name, "settings"), settings, opts);\u000a    };\u000a\u000a    OctoPrintClient.registerComponent("users", OctoPrintUserClient);\u000a    return OctoPrintUserClient;\u000a});\u000a\u000a;\u000a
p0
.