V// source: plugin/softwareupdate/clientjs/softwareupdate.js\u000a(function (global, factory) {\u000a    if (typeof define === "function" && define.amd) {\u000a        define(["OctoPrintClient"], factory);\u000a    } else {\u000a        factory(global.OctoPrintClient);\u000a    }\u000a})(this, function(OctoPrintClient) {\u000a    var OctoPrintSoftwareUpdateClient = function(base) {\u000a        this.base = base;\u000a\u000a        var url = this.base.getBlueprintUrl("softwareupdate");\u000a        this.checkUrl = url + "check";\u000a        this.updateUrl = url + "update";\u000a    };\u000a\u000a    OctoPrintSoftwareUpdateClient.prototype.checkEntries = function(entries, force, opts) {\u000a        if (arguments.length == 1 && _.isObject(arguments[0])) {\u000a            var params = arguments[0];\u000a            entries = params.entries;\u000a            force = params.force;\u000a            opts = params.opts;\u000a        }\u000a\u000a        entries = entries || [];\u000a        if (typeof entries == "string") {\u000a            entries = [entries];\u000a        }\u000a\u000a        var data = {};\u000a        if (!!force) {\u000a            data.force = true;\u000a        }\u000a        if (entries && entries.length) {\u000a            data.check = entries.join(",");\u000a        }\u000a        return this.base.getWithQuery(this.checkUrl, data, opts);\u000a    };\u000a\u000a    OctoPrintSoftwareUpdateClient.prototype.check = function(force, opts) {\u000a        if (arguments.length === 1 && _.isObject(arguments[0])) {\u000a            var params = arguments[0];\u000a            force = params.force;\u000a            opts = params.opts;\u000a        }\u000a\u000a        return this.checkEntries({entries: [], force: force, opts: opts});\u000a    };\u000a\u000a    OctoPrintSoftwareUpdateClient.prototype.update = function(targets, force, opts) {\u000a        if (arguments.length === 1 && _.isObject(arguments[0])) {\u000a            var params = arguments[0];\u000a            targets = params.targets;\u000a            force = params.force;\u000a            opts = params.opts;\u000a        }\u000a\u000a        targets = targets || [];\u000a        if (typeof targets === "string") {\u000a            targets = [targets];\u000a        }\u000a\u000a        var data = {\u000a            targets: targets,\u000a            force: !!force\u000a        };\u000a        return this.base.postJson(this.updateUrl, data, opts);\u000a    };\u000a\u000a    OctoPrintSoftwareUpdateClient.prototype.updateAll = function(force, opts) {\u000a        if (arguments.length === 1 && _.isObject(arguments[0])) {\u000a            var params = arguments[0];\u000a            force = params.force;\u000a            opts = params.opts;\u000a        }\u000a\u000a        var data = {\u000a            force: !!force\u000a        };\u000a        return this.base.postJson(this.updateUrl, data, opts);\u000a    };\u000a\u000a    OctoPrintClient.registerPluginComponent("softwareupdate", OctoPrintSoftwareUpdateClient);\u000a    return OctoPrintSoftwareUpdateClient;\u000a});\u000a\u000a;\u000a
p0
.