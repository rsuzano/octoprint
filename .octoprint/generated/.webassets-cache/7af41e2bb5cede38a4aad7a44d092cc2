V// source: plugin/customControl/js/customControl.js\u000a\ufeff$(function () {\u000a    function CustomControlViewModel(parameters) {\u000a        var self = this;\u000a\u000a        self.loginState = parameters[0];\u000a        self.settingsViewModel = parameters[1];\u000a        self.controlViewModel = parameters[2];\u000a\u000a        self.customControlDialogViewModel = parameters[3];\u000a\u000a        self.popup = undefined;\u000a\u000a        self.controls = ko.observableArray([]);\u000a\u000a        self.controlsFromServer = [];\u000a        self.additionalControls = [];\u000a\u000a        self.staticID = 0;\u000a\u000a        self._showPopup = function (options, eventListeners) {\u000a            if (self.popup !== undefined) {\u000a                self.popup.remove();\u000a            }\u000a            self.popup = new PNotify(options);\u000a\u000a            if (eventListeners) {\u000a                var popupObj = self.popup.get();\u000a                _.each(eventListeners, function (value, key) {\u000a                    popupObj.on(key, value);\u000a                })\u000a            }\u000a        };\u000a\u000a        self.onSettingsShown = function () {\u000a            self.requestData();\u000a        };\u000a\u000a        self.requestData = function () {\u000a            $.ajax({\u000a                url: API_BASEURL + "printer/command/custom",\u000a                method: "GET",\u000a                dataType: "json",\u000a                success: function (response) {\u000a                    self._fromResponse(response);\u000a                }\u000a            });\u000a        };\u000a\u000a        self._fromResponse = function (response) {\u000a            self.controlsFromServer = response.controls;\u000a            self.rerenderControls();\u000a        };\u000a\u000a        self.rerenderControls = function () {\u000a\u000a            // TODO: Brainstorming about how to handle additionalControls...\u000a\u000a            self.staticID = 0;\u000a            self.controls(undefined);\u000a            self.controls(self._processControls(undefined, self.controlsFromServer));\u000a\u000a            $(".innerSortable").sortable({\u000a                connectWith: ".innerSortable",\u000a                items: "> .sortable",\u000a                cancel: '',\u000a                sort: function (event, ui) {\u000a                  var self = $(this),\u000a                      width = ui.helper.outerWidth(),\u000a                      top = ui.helper.position().top;//changed to ;\u000a\u000a                  self.children().each(function () {\u000a                    if ($(this).hasClass('ui-sortable-helper') || $(this).hasClass('ui-sortable-placeholder')) {\u000a                      return true;\u000a                    }\u000a                    // If overlap is more than half of the dragged item\u000a                    var distance = Math.abs(ui.position.left - $(this).position().left),\u000a                        before = ui.position.left > $(this).position().left;\u000a\u000a                    if ((width - distance) > (width / 2) && (distance < width) && $(this).position().top === top) {\u000a                      if (before) {\u000a                        $('.ui-sortable-placeholder', self).insertBefore($(this));\u000a                      } else {\u000a                        $('.ui-sortable-placeholder', self).insertAfter($(this));\u000a                      }\u000a                      return false;\u000a                    }\u000a                  });\u000a                },\u000a                update: function(event, ui) {\u000a                    var target = ko.dataFor(this);\u000a                    var item = ko.dataFor(ui.item[0]);\u000a\u000a                    if (target == undefined) {\u000a                        return;\u000a                    } else {\u000a                        if (target == self) {\u000a                            if (!item.hasOwnProperty("children")) {\u000a                                return;\u000a                            }\u000a                        }\u000a                        else if (!target.hasOwnProperty("children")) {\u000a                            return;\u000a                        }\u000a                    }\u000a\u000a                    var position = ko.utils.arrayIndexOf(ui.item.parent().children(), ui.item[0]);\u000a                    if (position >= 0) {\u000a                        if (item.parent != undefined) {\u000a                            item.parent.children.remove(item);\u000a\u000a                            if (target == self)\u000a                                self.controlsFromServer.splice(position, 0, item);\u000a                            else\u000a                                target.children.splice(position, 0, item);\u000a                        } else {\u000a                            self.controlsFromServer = _.without(self.controlsFromServer, item);\u000a                            if (target == self)\u000a                                self.controlsFromServer.splice(position, 0, item);\u000a                            else\u000a                                target.children.splice(position, 0, item);\u000a                        }\u000a                    }\u000a                },\u000a                stop: function(event, ui) {\u000a                    self.rerenderControls();\u000a                }\u000a            }).disableSelection();\u000a        };\u000a\u000a        self._processControls = function (parent, controls) {\u000a            for (var i = 0; i < controls.length; i++) {\u000a                controls[i] = self._processControl(parent, controls[i]);\u000a            }\u000a            return controls;\u000a        };\u000a\u000a        self._processInput = function (list) {\u000a            var inputs = [];\u000a\u000a            var attributeToInt = function (obj, key, def) {\u000a                if (obj.hasOwnProperty(key)) {\u000a                    var val = obj[key];\u000a                    if (_.isNumber(val)) {\u000a                        return val;\u000a                    }\u000a\u000a                    var parsedVal = parseInt(val);\u000a                    if (!isNaN(parsedVal)) {\u000a                        return parsedVal;\u000a                    }\u000a                }\u000a                return def;\u000a            };\u000a\u000a            _.each(list, function (element, index, l) {\u000a                var input = {\u000a                    name: ko.observable(element.name),\u000a                    parameter: ko.observable(element.parameter),\u000a                    default: ko.observable(element.hasOwnProperty("default") ? element.default : undefined)\u000a                }\u000a\u000a                if (element.hasOwnProperty("slider") && _.isObject(element.slider)) {\u000a                    input.slider = {\u000a                        min: ko.observable(element.slider.min),\u000a                        max: ko.observable(element.slider.max),\u000a                        step: ko.observable(element.slider.step)\u000a                    }\u000a\u000a                    var defaultValue = attributeToInt(element, "default", attributeToInt(element.slider, "min", 0));\u000a\u000a                    // if default value is not within range of min and max, correct that\u000a                    if (!_.inRange(defaultValue, element.slider.min, element.slider.max)) {\u000a                        // use bound closer to configured default value\u000a                        defaultValue = defaultValue < element.slider.min ? element.slider.min : element.slider.max;\u000a                    }\u000a\u000a                    input.value = ko.observable(defaultValue);\u000a                }\u000a                else {\u000a                    input.slider = false;\u000a                    input.value = input.default;\u000a                }\u000a\u000a                inputs.push(input);\u000a            });\u000a\u000a            return inputs;\u000a        }\u000a        self._processControl = function (parent, control) {\u000a            if (control.processed) {\u000a                control.id("settingsCustomControl_id" + self.staticID++);\u000a            }\u000a            else {\u000a                control.id = ko.observable("settingsCustomControl_id" + self.staticID++);\u000a            }\u000a            control.parent = parent;\u000a\u000a            if (control.processed) {\u000a                if (control.hasOwnProperty("children")) {\u000a                    control.children(self._processControls(control, control.children()));\u000a                }\u000a\u000a                return control;\u000a            }\u000a\u000a            if (control.hasOwnProperty("template") && control.hasOwnProperty("regex")) {\u000a                control.template = ko.observable(control.template);\u000a                control.regex = ko.observable(control.regex);\u000a                control.default = ko.observable(control.default || "");\u000a                control.value = ko.computed(function () { return control.default(); });\u000a\u000a                delete control.key;\u000a                delete control.template_key;\u000a            }\u000a\u000a            if (control.hasOwnProperty("children")) {\u000a                control.children = ko.observableArray(self._processControls(control, control.children));\u000a                if (!control.hasOwnProperty("layout") || !(control.layout == "vertical" || control.layout == "horizontal" || control.layout == "horizontal_grid"))\u000a                    control.layout = ko.observable("vertical");\u000a                else\u000a                    control.layout = ko.observable(control.layout);\u000a\u000a                if (control.hasOwnProperty("collapsed"))\u000a                    control.collapsed = ko.observable(control.collapsed);\u000a                else\u000a                    control.collapsed = ko.observable(false);\u000a            }\u000a            \u000a            if (control.hasOwnProperty("input")) {\u000a                control.input = ko.observableArray(self._processInput(control.input));\u000a            }\u000a\u000a            control.name = ko.observable(control.name || "");\u000a\u000a            control.width = ko.observable(control.hasOwnProperty("width") ? control.width : "2");\u000a            control.offset = ko.observable(control.hasOwnProperty("offset") ? control.offset : "");\u000a\u000a            var js;\u000a            if (control.hasOwnProperty("javascript")) {\u000a                control.javascript = control.javascript;\u000a            }\u000a\u000a            if (control.hasOwnProperty("enabled")) {\u000a                control.enabled = control.enabled;\u000a            }\u000a\u000a            control.processed = true;\u000a            return control;\u000a        };\u000a\u000a        self.displayMode = function (customControl) {\u000a            if (customControl.hasOwnProperty("children")) {\u000a                return (customControl.hasOwnProperty("name") && customControl.name() != "") ? "settingsCustomControls_containerTemplate_collapsable" : "settingsCustomControls_containerTemplate_nameless";\u000a            } else {\u000a                return "settingsCustomControls_controlTemplate";\u000a            }\u000a        }\u000a\u000a        self.rowCss = function (customControl) {\u000a            var span = "span2";\u000a            var offset = "";\u000a            if (customControl.hasOwnProperty("width") && customControl.width() != "") {\u000a                span = "span" + customControl.width();\u000a            }\u000a            if (customControl.hasOwnProperty("offset") && customControl.offset() != "") {\u000a                offset = "offset" + customControl.offset();\u000a            }\u000a            return "sortable " + span + " " + offset;\u000a        };\u000a\u000a        self.searchElement = function (list, id) {\u000a            for (var i = 0; i < list.length; i++)\u000a            {\u000a                if (list[i].id() == id)\u000a                    return list[i];\u000a\u000a                if (list[i].hasOwnProperty("children")) {\u000a                    var element = self.searchElement(list[i].children(), id);\u000a                    if (element != undefined)\u000a                        return element;\u000a                }\u000a            }\u000a\u000a            return undefined;\u000a        }\u000a\u000a        self.createElement = function (invokedOn, contextParent, selectedMenu) {\u000a            if (contextParent.attr('id') == "base") {\u000a                self.customControlDialogViewModel.reset();\u000a\u000a                self.customControlDialogViewModel.show(function (ret) {\u000a                    self.controlsFromServer.push(ret);\u000a                    self.rerenderControls();\u000a                });\u000a            }\u000a            else {\u000a                var parentElement = self.searchElement(self.controlsFromServer, contextParent.attr('id'));\u000a                if (parentElement == undefined) {\u000a                    self._showPopup({\u000a                        title: gettext("Something went wrong while creating the new Element"),\u000a                        type: "error"\u000a                    });\u000a                    return;\u000a                }\u000a\u000a                self.customControlDialogViewModel.reset({ parent: parentElement });\u000a\u000a                self.customControlDialogViewModel.show(function (ret) {\u000a                    parentElement.children.push(self._processControl(parentElement, ret));\u000a                });\u000a            }\u000a        }\u000a        self.deleteElement = function (invokedOn, contextParent, selectedMenu) {\u000a            var element = self.searchElement(self.controlsFromServer, contextParent.attr('id'));\u000a            if (element == undefined) {\u000a                self._showPopup({\u000a                    title: gettext("Something went wrong while creating the new Element"),\u000a                    type: "error"\u000a                });\u000a                return;\u000a            }\u000a\u000a            showConfirmationDialog("", function (e) {\u000a                if (element.parent != undefined)\u000a                    element.parent.children.remove(element);\u000a                else {\u000a                    self.controlsFromServer = _.without(self.controlsFromServer, element);\u000a                    self.rerenderControls();\u000a                }\u000a            });\u000a        }\u000a        self.editElement = function (invokedOn, contextParent, selectedMenu) {\u000a            var element = self.element = self.searchElement(self.controlsFromServer, contextParent.attr('id'));\u000a            if (element == undefined) {\u000a                self._showPopup({\u000a                    title: gettext("Something went wrong while creating the new Element"),\u000a                    type: "error"\u000a                });\u000a                return;\u000a            }\u000a\u000a            var title = "Edit Container";\u000a            var type = "container";\u000a            var data = {\u000a                parent: element.parent,\u000a            };\u000a\u000a            if (element.hasOwnProperty("name")) {\u000a                data.name = element.name();\u000a            }\u000a            if (element.hasOwnProperty("template")) {\u000a                data.template = element.template();\u000a                data.regex = element.regex();\u000a                data.defaultValue = element.default() || "";\u000a\u000a                title = "Edit Output";\u000a                type = "output";\u000a            }\u000a            if (element.hasOwnProperty("layout")) {\u000a                data.layout = element.layout();\u000a                data.collapsed = element.collapsed();\u000a\u000a                title = "Edit Container";\u000a                type = "container";\u000a            }\u000a            if (element.hasOwnProperty("command")) {\u000a                data.commands = element.command;\u000a\u000a                title = "Edit Command";\u000a                type = "command";\u000a            }\u000a            if (element.hasOwnProperty("commands")) {\u000a                var commands = "";\u000a                _.each(element.commands, function (e, index, list) {\u000a                    commands += e;\u000a                    if (index < list.length)\u000a                        commands += '\u005cn';\u000a                });\u000a                data.commands = commands;\u000a\u000a                title = "Edit Command";\u000a                type = "command";\u000a            }\u000a            if (element.hasOwnProperty("script")) {\u000a                data.script = element.script;\u000a\u000a                title = "Edit Script command";\u000a                type = "script";\u000a            }\u000a            if (element.hasOwnProperty("confirm")) {\u000a                data.confirm = element.confirm;\u000a            }\u000a            if (element.hasOwnProperty("input"))\u000a            {\u000a                data.input = [];\u000a                _.each(element.input(), function (element, index, list) {\u000a                    data.input[index] = ko.mapping.toJS(element);\u000a                    if (element.hasOwnProperty("default")) {\u000a                        data.input[index].defaultValue = element.default;\u000a                    }\u000a                });\u000a            }\u000a\u000a            if (element.hasOwnProperty("width")) {\u000a                data.width = element.width();\u000a            }\u000a            if (element.hasOwnProperty("offset")) {\u000a                data.offset = element.offset();\u000a            }\u000a\u000a            self.customControlDialogViewModel.reset(data);\u000a            self.customControlDialogViewModel.title(gettext(title));\u000a            self.customControlDialogViewModel.type(type);\u000a\u000a            self.customControlDialogViewModel.show(function (ret) {\u000a                var element = self.element;\u000a\u000a                switch (self.customControlDialogViewModel.type()) {\u000a                    case "container": {\u000a                        element.name(ret.name);                           \u000a                        element.layout(ret.layout);\u000a                        element.collapsed(ret.collapsed);\u000a                        break;\u000a                    }\u000a                    case "command": {\u000a                        element.name(ret.name);\u000a\u000a                        if (ret.command != undefined) {\u000a                            element.command = ret.command;\u000a                            delete element.commands;\u000a                        }\u000a                        if (ret.commands != undefined) {\u000a                            element.commands = ret.commands;\u000a                            delete element.command;\u000a                        }\u000a\u000a                        if (ret.confirm != "") {\u000a                            element.confirm = ret.confirm;\u000a                        }\u000a\u000a                        if (ret.input != undefined) {\u000a                            _.each(ret.input, function (element, index, list) {\u000a                                data.input[index] = ko.mapping.toJS(element);\u000a                            });\u000a\u000a                            element.input(self._processInput(ret.input));\u000a                        }\u000a                        else\u000a                            delete element.input;\u000a\u000a                        // Command can also be a output\u000a                        if (ret.hasOwnProperty("template")) {\u000a                            if (element.hasOwnProperty("template"))\u000a                                element.template(ret.template);\u000a                            else\u000a                                element.template = ko.observable(ret.template);\u000a\u000a                            if (element.hasOwnProperty("regex"))\u000a                                element.regex(ret.regex);\u000a                            else\u000a                                element.regex = ko.observable(ret.regex);\u000a\u000a                            if (element.hasOwnProperty("default"))\u000a                                element.default(ret.default);\u000a                            else\u000a                                element.default = ko.observable(ret.default);\u000a                        }\u000a                        else\u000a                        {\u000a                            if (element.hasOwnProperty("default"))\u000a                                element.default(undefined);\u000a\u000a                            delete element.template;\u000a                            delete element.regex;\u000a                            delete element.default;\u000a                        }\u000a                        break;\u000a                    }\u000a                    case "script": {\u000a                        element.name(ret.name);\u000a                        element.script = ret.script;\u000a\u000a                        if (ret.confirm != "") {\u000a                            element.confirm = ret.confirm;\u000a                        }\u000a\u000a                        if (ret.input != undefined) {\u000a                            element.input(self._processInput(ret.input));\u000a                        }\u000a                        else\u000a                            delete element.input;\u000a\u000a                        break;\u000a                    }\u000a                    case "output": {\u000a                        element.template(ret.template);\u000a                        element.regex(ret.regex);\u000a                        element.default(ret.defaultValue);\u000a                        break;\u000a                    }\u000a                }\u000a\u000a                if (element.parent && element.parent.layout() == "horizontal_grid") {\u000a                    if (ret.width != undefined && ret.width != "")\u000a                        element.width(ret.width);\u000a\u000a                    if (ret.offset != undefined && ret.offset != "")\u000a                        element.offset(ret.offset);\u000a                }\u000a            });\u000a        }\u000a\u000a        self.controlContextMenu = function (invokedOn, contextParent, selectedMenu)\u000a        {\u000a            switch (selectedMenu.attr('cmd')) {\u000a                case "editElement": {\u000a                    self.editElement(invokedOn, contextParent, selectedMenu);\u000a                    break;\u000a                }\u000a                case "deleteElement": {\u000a                    self.deleteElement(invokedOn, contextParent, selectedMenu);\u000a                    break;\u000a                }\u000a                default: {\u000a                    if (selectedMenu.attr('cmd').startsWith("create")) {\u000a                        switch (selectedMenu.attr('cmd')) {\u000a                            case "createContainer": {\u000a                                self.customControlDialogViewModel.title(gettext("Create container"));\u000a                                self.customControlDialogViewModel.type("container");\u000a                                break;\u000a                            }\u000a                            case "createCommand": {\u000a                                self.customControlDialogViewModel.title(gettext("Create Command"));\u000a                                self.customControlDialogViewModel.type("command");\u000a                                break;\u000a                            }\u000a                            case "createScript": {\u000a                                self.customControlDialogViewModel.title(gettext("Create Script"));\u000a                                self.customControlDialogViewModel.type("script");\u000a                                break;\u000a                            }\u000a                            case "createOutput": {\u000a                                self.customControlDialogViewModel.title(gettext("Create Output"));\u000a                                self.customControlDialogViewModel.type("output");\u000a                                break;\u000a                            }\u000a                        }\u000a\u000a                        self.createElement(invokedOn, contextParent, selectedMenu);\u000a                    }\u000a                    break;\u000a                }\u000a            }\u000a        }\u000a\u000a        self.editStyle = function (type) {\u000a        }\u000a       \u000a        self.recursiveDeleteProperties = function (list) {\u000a            _.each(list, function (element, index, ll) {\u000a                if (!element.parent || (element.parent.hasOwnProperty("layout") && element.parent.layout() != "horizontal_grid")) {\u000a                    delete element.width;\u000a                    delete element.offset;\u000a                }\u000a\u000a                if (element.default == "")\u000a                    delete element.default;\u000a\u000a                delete element.id;\u000a                delete element.parent;\u000a                delete element.processed;\u000a                delete element.output;\u000a                delete element.key;\u000a                delete element.template_key;\u000a                delete element.value;\u000a\u000a                if (element.hasOwnProperty("input")) {\u000a                    _.each(element.input(), function (e, i, l) {\u000a                        if (e.default == "")\u000a                            delete e.default;\u000a\u000a                        delete e.value;\u000a                    });\u000a                }\u000a\u000a                if (element.hasOwnProperty("width") && element.width() == "")\u000a                    delete element.width;\u000a                if (element.hasOwnProperty("offset") && element.offset() == "")\u000a                    delete element.offset;\u000a\u000a                if (!element.hasOwnProperty("name") || element.name() == "") {\u000a                    delete element.name;\u000a                    delete element.collapsed;\u000a                }\u000a\u000a\u000a                if (element.hasOwnProperty("children")) {\u000a                    if (element.hasOwnProperty("collapsed") && !element.collapsed())\u000a                        delete element.collapsed;\u000a\u000a                    self.recursiveDeleteProperties(element.children());\u000a                }\u000a            });\u000a        }\u000a        self.onSettingsBeforeSave = function () {\u000a            self.recursiveDeleteProperties(self.controlsFromServer);\u000a            self.settingsViewModel.settings.plugins.customControl.controls = self.controlsFromServer;\u000a        }\u000a\u000a        self.onEventSettingsUpdated = function (payload) {\u000a            self.requestData();\u000a        }\u000a    }\u000a\u000a    // view model class, parameters for constructor, container to bind to\u000a    OCTOPRINT_VIEWMODELS.push([\u000a        CustomControlViewModel,\u000a        ["loginStateViewModel", "settingsViewModel", "controlViewModel", "customControlDialogViewModel"],\u000a        "#settings_plugin_customControl"\u000a    ]);\u000a});\u000a;\u000a
p0
.