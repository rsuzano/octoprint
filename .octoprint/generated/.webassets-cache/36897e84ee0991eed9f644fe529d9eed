V// source: plugin/appkeys/clientjs/appkeys.js\u000a(function (global, factory) {\u000a    if (typeof define === "function" && define.amd) {\u000a        define(["OctoPrintClient"], factory);\u000a    } else {\u000a        factory(global.OctoPrintClient);\u000a    }\u000a})(this, function(OctoPrintClient) {\u000a    var OctoPrintAppKeysClient = function(base) {\u000a        this.base = base;\u000a    };\u000a\u000a    OctoPrintAppKeysClient.prototype.getKeys = function(opts) {\u000a        return this.base.simpleApiGet("appkeys", opts);\u000a    };\u000a\u000a    OctoPrintAppKeysClient.prototype.getAllKeys = function(opts) {\u000a        return this.base.get(OctoPrintClient.prototype.getSimpleApiUrl("appkeys") + "?all=true", opts);\u000a    };\u000a\u000a    OctoPrintAppKeysClient.prototype.generateKey = function(app, opts) {\u000a        return this.base.simpleApiCommand("appkeys", "generate", {"app": app}, opts);\u000a    };\u000a\u000a    OctoPrintAppKeysClient.prototype.revokeKey = function(key, opts) {\u000a        return this.base.simpleApiCommand("appkeys", "revoke", {"key": key}, opts);\u000a    };\u000a\u000a    OctoPrintAppKeysClient.prototype.decide = function(token, decision, opts) {\u000a        return this.base.postJson(this.base.getBlueprintUrl("appkeys") + "decision/" + token, {decision: !!decision}, opts);\u000a    };\u000a\u000a    OctoPrintAppKeysClient.prototype.probe = function(opts) {\u000a        return this.base.get(this.base.getBlueprintUrl("appkeys") + "probe", opts);\u000a    };\u000a\u000a    OctoPrintAppKeysClient.prototype.request = function(app, opts) {\u000a        return this.requestForUser(app, undefined, opts);\u000a    };\u000a\u000a    OctoPrintAppKeysClient.prototype.requestForUser = function(app, user, opts) {\u000a        return this.base.postJson(this.base.getBlueprintUrl("appkeys") + "request", {app: app, user: user}, opts);\u000a    };\u000a\u000a    OctoPrintAppKeysClient.prototype.checkDecision = function(token, opts) {\u000a        return this.base.get(this.base.getBlueprintUrl("appkeys") + "request/" + token, opts);\u000a    };\u000a\u000a    OctoPrintAppKeysClient.prototype.authenticate = function(app, user) {\u000a        var deferred = $.Deferred();\u000a        var client = this;\u000a\u000a        client.probe()\u000a            .done(function() {\u000a                client.requestForUser(app, user)\u000a                    .done(function(response) {\u000a                        var token = response.app_token;\u000a                        if (!token) {\u000a                            // no token received, something went wrong\u000a                            deferred.reject();\u000a                            return;\u000a                        }\u000a\u000a                        var interval = 1000;\u000a                        var poll = function() {\u000a                            client.checkDecision(token)\u000a                                .done(function(response) {\u000a                                    if (response.api_key) {\u000a                                        // got a decision, resolve the promise\u000a                                        deferred.resolve(response.api_key);\u000a                                    } else {\u000a                                        // no decision yet, poll a bit more\u000a                                        deferred.notify();\u000a                                        window.setTimeout(poll, interval);\u000a                                    }\u000a                                })\u000a                                .fail(function() {\u000a                                    // something went wrong\u000a                                    deferred.reject();\u000a                                });\u000a                        };\u000a                        window.setTimeout(poll, interval);\u000a                    })\u000a                    .fail(function() {\u000a                        // something went wrong\u000a                        deferred.reject();\u000a                    });\u000a            })\u000a            .fail(function() {\u000a                // workflow unsupported\u000a                deferred.reject();\u000a            });\u000a\u000a        return deferred.promise();\u000a    };\u000a\u000a    OctoPrintClient.registerPluginComponent("appkeys", OctoPrintAppKeysClient);\u000a    return OctoPrintAppKeysClient;\u000a});\u000a\u000a;\u000a
p0
.